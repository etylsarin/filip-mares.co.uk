{"version":3,"file":"component---src-pages-portfolio-oriflame-mdx-a9377c1bbfa499066f6f.js","mappings":"sJAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,KAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,GAAI,KAAM,uBAAwB,KAAMI,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,+ZAAga,KAAMG,EAAAA,cAAoBP,EAAYG,GAAI,KAAM,+BAAgC,KAAMI,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,oaAAqa,KAAMG,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,gbAAib,KAAMG,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,wWAAyW,KAAMG,EAAAA,cAAoBP,EAAYG,GAAI,KAAM,2BAA4B,KAAMI,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,uUAAwU,KAAMG,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,wZAAyZ,KAAMG,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,gUAC15F,CAKA,UAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,KAAsBN,EAAMO,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWV,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,C,qECcA,MAAMW,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBN,GAC/B,MAAMO,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfL,EACFA,EAAWO,GAGb,IAAIA,KAAsBP,EACnC,GACA,CAACO,EAAmBP,GAExB,C","sources":["webpack://filip-mares.dev/./src/pages/portfolio/oriflame.mdx","webpack://filip-mares.dev/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Goal of the project\"), \"\\n\", React.createElement(_components.p, null, \"The goal of the Oriflame web app and e-shop project is to create a robust and user-friendly online platform for customers to explore, purchase, and interact with Oriflame's wide range of beauty and wellness products. The primary objective is to enhance the overall customer experience, improve accessibility, and streamline the buying process, while also providing a platform for brand promotion and engagement.\"), \"\\n\", React.createElement(_components.h2, null, \"Description of the solution\"), \"\\n\", React.createElement(_components.p, null, \"The Oriflame web app and e-shop is a comprehensive online platform that offers a seamless and intuitive user interface for customers. The solution incorporates various features and functionalities to ensure a smooth shopping experience. The web app allows customers to browse through a vast catalog of products, organized into categories and subcategories, enabling them to easily find and explore items of interest.\"), \"\\n\", React.createElement(_components.p, null, \"The e-shop aspect of the platform enables customers to add products to their cart, manage their orders, and complete the checkout process efficiently. It provides multiple payment options and ensures secure transactions to build trust and confidence among users. Additionally, the web app includes personalized product recommendations, special offers, and discounts to enhance customer engagement and encourage repeat purchases.\"), \"\\n\", React.createElement(_components.p, null, \"To further enrich the user experience, the Oriflame web app incorporates social sharing functionalities, allowing customers to share their favorite products or purchases with their friends and followers on social media platforms. It also integrates with Oriflame's loyalty program, enabling customers to earn rewards and redeem them for exclusive benefits.\"), \"\\n\", React.createElement(_components.h2, null, \"My work on this project\"), \"\\n\", React.createElement(_components.p, null, \"As the lead front-end engineer for the Oriflame web app and e-shop, I played a crucial role in the development and implementation of the solution. My responsibilities included collaborating with designers and back-end developers to translate the design specifications into functional and visually appealing user interfaces.\"), \"\\n\", React.createElement(_components.p, null, \"I was responsible for developing responsive and accessible front-end components, ensuring cross-browser compatibility, and optimizing the performance of the web app. I worked closely with the UX/UI team to ensure a consistent and intuitive user experience throughout the platform. Additionally, I implemented the necessary client-side validation and error handling to provide a seamless checkout process.\"), \"\\n\", React.createElement(_components.p, null, \"Throughout the project, I actively participated in code reviews, conducted tests, and resolved any front-end related bugs or issues. I also kept up with the latest web development trends and best practices to ensure the Oriflame web app and e-shop met industry standards and delivered an exceptional user experience.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","_provideComponents","components","React","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}